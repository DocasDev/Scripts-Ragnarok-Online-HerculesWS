/* ===============================================================
                            Forja Avançada
   ================================================================
   ----------------------------------------------------------------
                            COMPATIBILIDADE
							   Hercules
   ----------------------------------------------------------------
                                VERSÕES
                        1.0 Criação [QuodDG]
   ----------------------------------------------------------------
   https://rathena.org/board/topic/96217-named-weapon/
 * ================================================================
 */

geffen_in,61,173,5	script	Ferreiro Avançado#sky	4_M_DWARF,{
	.@npcName$ = "^FF8B00[= Ferreiro Avançado =]^000000";
	if(Class == Job_Blacksmith || Class == Job_Whitesmith || Class == Job_Job_Mechanic || Class == Job_Mechanic_T){
		if(	getskilllv(BS_WEAPONRESEARCH) < 10 || 
			/*getskilllv(BS_IRON) < 5 || 
			getskilllv(BS_STEEL) < 5 || 
			getskilllv(BS_ENCHANTEDSTONE) < 5 || */
			getskilllv(BS_DAGGER) < 3 || 
			getskilllv(BS_SWORD) < 3 || 
			getskilllv(BS_TWOHANDSWORD) < 3 ||
			getskilllv(BS_AXE) < 3 || 
			getskilllv(BS_MACE) < 3 || 
			getskilllv(BS_KNUCKLE) < 3 || 
			getskilllv(BS_SPEAR) < 3){
				mes .@npcName$;
				mes "Você ainda tem muito o que aprender antes de tentar entender os mistérios da Forja Avançada.";
				close;
			}
		if(qdo_smith_2 == 0){
			mes .@npcName$;
			mes "Olha só o que temos aqui...";
			mes "...um pequeno Ferreiro!";
			mes "O que quer de mim?";
			next;
			if(select("Nada:Me ensine a Forja Avançada") == 1){
				mes .@npcName$;
				mes "Não seja muito orrogante!";
				mes "Nossa Profissão é uma arte em contínuo desenvolvimento.";
				close;
			}
			mes .@npcName$;
			mes "Hmmmm...";
			mes "Primeiro preciso medir suas habilidades.";
			mes "Não posso sair contando a qualquer um!";
			next;
			mes .@npcName$;
			mes "Vejamos...";
			mes "Me traga " + $@item_req_test_qt + "x ^0075E9" + getitemname($@item_req_test) + "^000000 forjadas por você, para que eu analise seu trabalho.";
			next;
			mes .@npcName$;
			mes "Se eu ficar satisfeito com elas irei lhe contar!";
			close2;
			qdo_smith_2 = 1;
			setquest(61603);
		}else if(qdo_smith_2 == 1){
			.@count = callfunc("QDO_F_Get_Required_items", .@items$, 1, $@item_req_forge_lv);
			if(.@count < 2){
				mes .@npcName$;
				mes "Não adianta insistir!";
				mes "Me traga " + $@item_req_test_qt + "x ^0075E9" + getitemname($@item_req_test) + "^000000 e então irei analisar seu pedido.";
				close;
			}
			mes .@npcName$;
			mes "Deixe ver seu trabalho...";
			mes "hmmm...";
			next;
			mes .@npcName$;
			mes "Parece que você tem talento.";
			mes "Hehehe";
			next;
			mes .@npcName$;
			mes "Eu aprendi as minhas novas técnicas com um Grupo de Fadas Ferreiras.";
			next;
			mes .@npcName$;
			mes "São técnicas envolvendo Plasma e a fusão de materiais.";
			mes "Vou te dizer onde encontrar esse lugar, mas vou logo avisando, eles não deixam qualquer um entrar.";
			next;
			mes .@npcName$;
			mes "Muito bem...";
			mes "Vou lhe enviar para a ^0075E9Sala de Forja Avançada^000000.";
			close2;
			qdo_smith_2 = 2;
			changequest(61603, 61604);
			warp("1@mir", 101, 16);
		}else{
			mes .@npcName$;
			mes "Muito bem...";
			mes "Vou lhe enviar para a ^0075E9Sala de Forja Avançada^000000.";
			close2;
			warp("1@mir", 101, 16);
		}
	}else{
		mes .@npcName$;
		mes "Você não me parece ter as habilidades necessárias para que eu lhe ensine...";
		close;
	}
	end;
	
OnInit:
	$@item_req_test = Gladius;
	$@item_req_forge_lv = getiteminfo($@item_req_test, ITEMINFO_WLV);
	$@item_req_test_qt = 2;
	$@forge_2_delimiter$ = "|";
	end;
}

//[0]ID		[1]IDX	[2]card1	[3]card2	[4]card3	[5]card4	[6]refine
function	script	QDO_F_Get_Required_items	{
	.@specific = getarg(1);
	.@char_id = getcharid(CHAR_ID_CHAR);
	getinventorylist();
	//Captura todos os itens do inventorio do personagem
	.@count = @inventorylist_count;
	copyarray(.@id[0], @inventorylist_id[0], .@count);
	copyarray(.@idx[0], @inventorylist_idx[0], .@count);
	copyarray(.@card1[0], @inventorylist_card1[0], .@count);
	copyarray(.@card2[0], @inventorylist_card2[0], .@count);
	copyarray(.@card3[0], @inventorylist_card3[0], .@count);
	copyarray(.@card4[0], @inventorylist_card4[0], .@count);
	copyarray(.@refine[0], @inventorylist_refine[0], .@count);
	.@j = 0;
	for(.@i = 0; .@i < .@count; .@i++){
		//Se solicitado a busca do item específico da missão
		//verifica se o item corresponde ao solicitado
		if(.@specific == 1 && .@id[.@i] != $@item_req_test){
			continue;
		}
		//Ignora itens que não sejam armas e
		//que não sejam do nível requerido
		if(getiteminfo(.@id[.@i], ITEMINFO_TYPE) != 4 || 
			getiteminfo(.@id[.@i], ITEMINFO_WLV) != getarg(2)){
			continue;
		}
		//Captura o char_id de quem forjou o item
		.@owner_id = .@card3[.@i] + ( .@card4[.@i] << 16 );
		//Verifica se foi forjado pelo próprio personagem
		if(.@owner_id == .@char_id){
			set getelementofarray(getarg(0), .@j),	.@id[.@i] + $@forge_2_delimiter$ + 
													.@idx[.@i] + $@forge_2_delimiter$ + 
													.@card1[.@i] + $@forge_2_delimiter$ + 
													.@card2[.@i] + $@forge_2_delimiter$ + 
													.@card3[.@i] + $@forge_2_delimiter$ + 
													.@card4[.@i] + $@forge_2_delimiter$ + 
													.@refine[.@i];
			.@j++;
		}
	}
	return .@j;
}

1@mir,101,96,4	script	Plasma#sfa	C3_PLASMA_Y,{
	.@npcName$ = "^FF8B00[= Forja =]^000000";
	if(qdo_smith_2 == 3){
		mes .@npcName$;
		mes "Você não tem o que é necessário para usar a ^0075E9Esfera de Plasma^000000.";
		mes "Antes de tudo você tem que entender os Princípios Básicos.";
		next;
		mes .@npcName$;
		mes "Após receber as instruções do ^0075E9Instrutor de Forja^000000, você receberá autorização para usar a ^0075E9Esfera de Plasma^000000.";
		close2;
		qdo_smith_2 = 4;
		changequest(61605, 61606);
		end;
	}
	if(qdo_smith_2 < 5){
		mes .@npcName$;
		mes "Você não tem o que é necessário para usar a ^0075E9Esfera de Plasma^000000.";
		close;
	}
	if(	getskilllv(BS_WEAPONRESEARCH) < 10 || 
		/*getskilllv(BS_IRON) < 5 || 
		getskilllv(BS_STEEL) < 5 || 
		getskilllv(BS_ENCHANTEDSTONE) < 5 || */
		getskilllv(BS_DAGGER) < 3 || 
		getskilllv(BS_SWORD) < 3 || 
		getskilllv(BS_TWOHANDSWORD) < 3 ||
		getskilllv(BS_AXE) < 3 || 
		getskilllv(BS_MACE) < 3 || 
		getskilllv(BS_KNUCKLE) < 3 || 
		getskilllv(BS_SPEAR) < 3){
			mes .@npcName$;
			mes "Você ainda tem muito o que aprender antes de poder usar a Forja Avançada.";
			close;
	}
	mes .@npcName$;
	mes "- Passo 1: -";
	mes "Escolha o que vai Forjar:";
	next;
	.@type = select("Dagger:Sword:Spear:Axe:Mace:Knuckle");
	.@count = callfunc("QDO_F_Get_Forge_Weapons", .@type, .@weapons);
	if(.@count == 0){
		mes .@npcName$;
		mes "Sem armas compatíveis nesta categoria.";
		close;
	}
	//== 
	//Selecionando a arma que quer forjar
	//== 
	.@menu$ = "^FF0000Sair^000000";
	for(.@i = 0; .@i < (.@count * $@weaponsForgeColumns); .@i += $@weaponsForgeColumns){
		.@menu$ += ":" + getitemname(.@weapons[.@i]) + " (" + .@weapons[.@i + 1] + "%)";
	}
	.@selected = select(.@menu$) - 2;
	if(.@selected == -1){
		mes .@npcName$;
		mes "Nenhuma arma selecionada.";
		close;
	}
	.@real_index = .@selected * $@weaponsForgeColumns;
	.@weapon_id = .@weapons[.@real_index];
	.@weapon_rate = .@weapons[.@real_index + 1];
	mes .@npcName$;
	mes "Para forjar 1x ^0075E9" + getitemname(.@weapon_id) + "^000000 serão necessárias 2x armas nível 3 forjadas por você.";
	next;
	mes .@npcName$;
	mes "A probabilidade de sucesso deste processo é de: ^0075E9" + .@weapon_rate + "%^000000.";
	mes "Sem contar o adicional por ^0075E9" + getitemname(1000) + "^000000 e ^0075E9Bigorna^000000.";
	mes "Continuar?";
	next;
	if(select("Não:Sim") == 1){
		mes .@npcName$;
		mes "Processo abortado.";
		close;
	}
	.@count = callfunc("QDO_F_Get_Required_items", .@items$, 0, $@item_req_forge_lv);
	if(.@count < 2){
		mes .@npcName$;
		mes "Processo abortado por falta de material.";
		close;
	}
	//== 
	//Selecionando o primeiro material
	//== 
	mes .@npcName$;
	mes "- Passo 2: -";
	mes "Selecione o primeiro material:";
	next;
	.@menu$ = "^FF0000Sair^000000";
	for(.@i = 0; .@i < .@count; .@i++){
		//[0]ID		[1]IDX	[2]card1	[3]card2	[4]card3	[5]card4	[6]refine
		explode(.@item$, .@items$[.@i], $@forge_2_delimiter$);
		//Quantidade de Star Crumb (1000) da arma
		.@i_sc = ( ( atoi(.@item$[3]) / 5 ) >> 8 );
		//Elemento da arma
		.@i_ele = atoi(.@item$[3]) - ( ( .@i_sc * 5 ) << 8 );
		.@menu$ += ":" + callfunc("QDO_F_Get_Prod_Item_Name", atoi(.@item$[0]), .@i_sc, .@i_ele, 1);
	}
	.@selected1 = select(.@menu$) - 2;
	if(.@selected1 == -1){
		mes .@npcName$;
		mes "Nenhum material selecionado.";
		close;
	}
	//[0]ID		[1]IDX	[2]card1	[3]card2	[4]card3	[5]card4	[6]refine
	explode(.@material_wep1$, .@items$[.@selected1], $@forge_2_delimiter$);
	//== 
	//Selecionando o segundo material
	//== 
	mes .@npcName$;
	mes "- Passo 3: -";
	mes "Selecione o segundo material:";
	next;
	.@menu$ = "^FF0000Sair^000000";
	for(.@i = 0; .@i < .@count; .@i++){
		//[0]ID		[1]IDX	[2]card1	[3]card2	[4]card3	[5]card4
		explode(.@item$, .@items$[.@i], $@forge_2_delimiter$);
		//Quantidade de Star Crumb (1000) da arma
		.@i_sc = ( ( atoi(.@item$[3]) / 5 ) >> 8 );
		//Elemento da arma
		.@i_ele = atoi(.@item$[3]) - ( ( .@i_sc * 5 ) << 8 );
		.@menu$ += 	":" + 
					callfunc("QDO_F_Get_Prod_Item_Name", atoi(.@item$[0]), .@i_sc, .@i_ele, 1) + 
					( .@item$[1] == .@material_wep1$[1] ? "^999999(Material 1)^000000" : "" ) + 
					"^000000";
	}
	.@selected2 = select(.@menu$) - 2;
	if(.@selected2 == -1){
		mes .@npcName$;
		mes "Nenhum material selecionado.";
		close;
	}
	if(.@selected1 == .@selected2){
		mes .@npcName$;
		mes "Somente 1 material foi selecionado.";
		mes "Processo abortado.";
		close;
	}
	//[0]ID		[1]IDX	[2]card1	[3]card2	[4]card3	[5]card4	[6]refine
	explode(.@material_wep2$, .@items$[.@selected2], $@forge_2_delimiter$);
	mes .@npcName$;
	mes "Será necessário adicionar " + $@reagentItemQuant + "x ^0075E9" + getitemname($@reagentItem) + "^000000 para liquefazer as armas.";
	mes "Continuar?";
	next;
	if(select("Não:Sim") == 1){
		mes .@npcName$;
		mes "Processo abortado.";
		close;
	}
	if(countitem($@reagentItem) < $@reagentItemQuant){
		mes .@npcName$;
		mes "Processo abortado por falta de reagente.";
		close;
	}
	//== 
	//Calculando os materiais e
	//elementos da armas nível 3
	//== 
	//Quantidade de Star Crumb (1000) da arma 1
	.@sc1 = ( ( atoi(.@material_wep1$[3]) / 5 ) >> 8 );
	//Elemento da arma 1
	.@ele1 = atoi(.@material_wep1$[3]) - ( ( .@sc1 * 5 ) << 8 );
	//Quantidade de Star Crumb (1000) da arma 2
	.@sc2 = ( ( atoi(.@material_wep2$[3]) / 5 ) >> 8 );
	//Elemento da arma 2
	.@ele2 = atoi(.@material_wep2$[3]) - ( ( .@sc2 * 5 ) << 8 );
	if(rand(1,2) == 1){
		.@ele = .@ele1;
	}else{
		.@ele = .@ele2;
	}
	.@sc = (.@sc1 + .@sc2 > 3) ? 3 : (.@sc1 + .@sc2);
	//== 
	//Calculando o refinamento
	//== 
	.@max_refine = atoi(.@material_wep1$[6]) > atoi(.@material_wep2$[6]) ? atoi(.@material_wep1$[6]) : atoi(.@material_wep2$[6]);
	.@refine = rand(0, .@max_refine);
	//== 
	//Calculando a probabilidade de sucesso
	//== 
	//Calcula o sucesso do processo
	//Cada 1x Star Crumb nas armas material
	//+2% de chance de sucesso
	.@weapon_rate += ( (.@sc1 + .@sc2) * 2) - .@refine;
	//Aumenta a chance de sucesso com Bigorna
	if(countitem(Emperium_Anvil) > 0){
		.@weapon_rate += 10;
	}else if(countitem(Golden_Anvil) > 0){
		.@weapon_rate += 5;
	}else if(countitem(Oridecon_Anvil) > 0){
		.@weapon_rate += 3;
	}else if(countitem(Anvil) > 0){
		.@weapon_rate += 1;
	}else{
		mes .@npcName$;
		mes "Processo abortado por falta de Birgorna.";
		close;
	}
	//Se o Personagem for VIP recebe bonus de +20%
	.@weapon_rate += #QDOVIP ? 20 : 0;
	mes .@npcName$;
	mes "- Especificações: -";
	mes "Chance real de sucesso: ^0075E9" + .@weapon_rate + "%^000000";
	mes "Continuar?";
	next;
	if(select("Não:Sim") == 1){
		mes .@npcName$;
		mes "Processo abortado.";
		close;
	}
	//Apagando os materiais necessários
	delitemidx(atoi(.@material_wep1$[1]), 1);
	delitemidx(atoi(.@material_wep2$[1]), 1);
	delitem($@reagentItem, $@reagentItemQuant);
	//Progress Bar
	progressbar("0083E0", 1);
	//Resultado
	.@rand = rand(1, 100);
	if(.@rand > .@weapon_rate){
		specialeffect EF_SHIELDCHARGE;
		//Calcula o material residual
		callfunc("QDO_F_Calcula_Residual", atoi(.@material_wep1$[0]), .@residualItem);
		getitem(.@residualItem[0], .@residualItem[1]);
		callfunc("QDO_F_Calcula_Residual", atoi(.@material_wep2$[0]), .@residualItem);
		getitem(.@residualItem[0], .@residualItem[1]);
		mes .@npcName$;
		mes "^FF0000Falha no Processo de Forja^000000.";
		mes "Sobra residual encontrada.";
		close;
	}
	specialeffect EF_REPAIRWEAPON;
	//Cria o novo item
	.@char_id = getcharid(CHAR_ID_CHAR);
	.@card2 = .@ele + ((.@sc * 5) << 8);
	.@card3 = .@char_id & 65535;
	.@card4 = .@char_id >> 16;
	getitem2(.@weapon_id, 1, 1, .@refine, 0, 255, .@card2, .@card3, .@card4);
	//Anuncia o feito
	announce("[" + strcharinfo(PC_NAME) + "] forjou 1 [" + callfunc("QDO_F_Get_Prod_Item_Name", .@weapon_id, .@sc, .@ele, 0) + "] +" + .@refine, bc_all);
	mes .@npcName$;
	mes "Processo de Forja concluído.";
	mes "Sucesso obtido.";
	close2;
	end;

OnInit:
	//Item necessário para complementar a Forja
	$@reagentItem = Black_Reagent;
	//Quantidade do item acima
	$@reagentItemQuant = 1;
	//Item dado ao Personagem em caso de falha
	//$@residualItem = Steel;
	$@weaponsForgeColumns = 2;
	//								[0]ID					[1]NumRate
									//Dagger - 1
	setarray $@weaponsForge[0],		Velum_Damascus,			2,		//0
									Octo_kitchen_Knife,		12,
									Counter_Dagger,			22,
									Sucsamad,				32,
									Dragon_Killer,			42,
									Princess_Knife,			52,
									Weeder_Knife,			62,
									Mail_Breaker,			72,
									Sword_Breaker,			82,		//17
									
									//Sword - 2
									Velum_Katzbalger,		2,		//18
									Magical_Blade,			12,
									Zweihander,				22,
									Small_Karasuma,			32,
									Cutlas,					42,
									Dragon_Slayer,			52,
									Scissores_Sword,		62,		//31
									
									//Spear - 3
									Velum_Glaive,			2,		//32
									Tjungkuletti,			12,
									Horseback_Lance,		22,
									Bill_Guisarme,			32,
									Spectral_Spear,			42,
									Gae_Bolg,				52,		//43
									
									//Axe - 4
									Velum_Buster,			2,		//44
									Velum_Guillotine,		3,
									Cleaver,				13,
									Bradium_Stonehammer,	23,		//51
									
									//Mace - 5
									Velum_Stunner,			2,		//52
									Velum_Flail,			3,
									Slash,					13,
									Golden_Mace,			23,
									Spike,					33,
									Hollgrehenn_Hammer,		43,		//53
									
									//Knuckle - 6
									Velum_Claw,				2,		//64
									Claw_Of_Flash,			12,
									Berserk,				22,
									Spartacus,				23;		//71
	end;
}

function	script	QDO_F_Calcula_Residual	{
	.@weapon_id = getarg(0);
	.@subtype = getiteminfo(.@weapon_id, ITEMINFO_SUBTYPE);
	switch(.@subtype){
		case 1:
			//Dagger
			if(rand(1,2) == 1){
				.@residual = Oridecon;
				.@quant = 4;
			}else{
				.@residual = Steel;
				.@quant = rand(40, 60);
			}
			break;
		case 2:
			//Sword
			if(.@weapon_id == Flamberge || rand(1,2) == 1){
				.@residual = Oridecon;
				.@quant = rand(8, 16);
			}else{
				.@residual = Steel;
				.@quant = rand(5, 15);
			}
			break;
		case 3:
			//2-Sword
			if(rand(1,2) == 1){
				.@residual = Oridecon;
				.@quant = rand(12, 16);
			}else{
				.@residual = Steel;
				.@quant = rand(10, 20);
			}
			break;
		case 4:
		case 5:
			//Spear or 2-Spear
			if(.@weapon_id == Lance || rand(1,2) == 1){
				.@residual = Oridecon;
				.@quant = rand(8, 12);
			}else{
				.@residual = Steel;
				.@quant = 10;
			}
			break;
		case 6:
		case 7:
			//Axe or 2-Axe
			if(rand(1,2) == 1){
				.@residual = Oridecon;
				.@quant = rand(4, 8);
			}else{
				.@residual = Steel;
				.@quant = rand(10, 20);
			}
			break;
		case 8:
			//Mace
			.@residual = Steel;
			.@quant = rand(85, 120);
			break;
		case 12:
			//Knuckle
			.@residual = Oridecon;
			.@quant = rand(4, 8);
			break;
	}
	set getelementofarray(getarg(1), 0), .@residual;
	set getelementofarray(getarg(1), 1), .@quant;
	return;
}

function	script	QDO_F_Get_Prod_Item_Name	{
	.@item_id = getarg(0);
	.@sc = getarg(1);
	.@ele = getarg(2);
	.@use_color = getarg(3);
	.@name$ = getitemname(.@item_id) + "'s ";
	.@strong$ = "";
	
	switch(.@sc){
		case 1:
			.@strong$ = " Forte";
			break;
		case 2:
			.@strong$ = " Muito Forte";
			break;
		case 3:
			.@strong$ = " Fortíssimo";
			break;
	}
	
	switch(.@ele){
		case 1:
			.@color_start$ = .@use_color == 1 ? "^4CBCE6" : "";
			.@color_end$ = .@use_color == 1 ? "^000000" : "";
			.@name$ += .@color_start$ + "Ice" + .@color_end$;
			break;
		case 2:
			.@color_start$ = .@use_color == 1 ? "^645944" : "";
			.@color_end$ = .@use_color == 1 ? "^000000" : "";
			.@name$ += .@color_start$ + "Earth" + .@color_end$;
			break;
		case 3:
			.@color_start$ = .@use_color == 1 ? "^AD1301" : "";
			.@color_end$ = .@use_color == 1 ? "^000000" : "";
			.@name$ += .@color_start$ + "Fire" + .@color_end$;
			break;
		case 4:
			.@color_start$ = .@use_color == 1 ? "^0AAD7D" : "";
			.@color_end$ = .@use_color == 1 ? "^000000" : "";
			.@name$ += .@color_start$ + "Wind" + .@color_end$;
			break;
	}
	return .@name$ + .@strong$;
}

function	script	QDO_F_Get_Forge_Weapons	{
	setarray .@weapons[0], 0;
	switch(getarg(0)){
		case 1:
			copyarray(.@weapons[0], $@weaponsForge[0], 18);
			break;
		case 2:
			copyarray(.@weapons[0], $@weaponsForge[18], 14);
			break;
		case 3:
			copyarray(.@weapons[0], $@weaponsForge[32], 12);
			break;
		case 4:
			copyarray(.@weapons[0], $@weaponsForge[44], 8);
			break;
		case 5:
			copyarray(.@weapons[0], $@weaponsForge[52], 12);
			break;
		case 6:
			copyarray(.@weapons[0], $@weaponsForge[64], 8);
			break;
	}
	.@count = getarraysize(.@weapons);
	.@j = 0;
	for(.@i = 0; .@i < .@count; .@i += $@weaponsForgeColumns){
		if(.@weapons[.@i] == 0 || getiteminfo(.@weapons[.@i], ITEMINFO_ELV) > BaseLevel){
			continue;
		}
		//announce(getitemname(.@weapons[.@i]) + " >> " + getiteminfo(.@weapons[.@i], ITEMINFO_ELV), bc_self);
		set getelementofarray(getarg(1), .@j++), .@weapons[.@i];
		set getelementofarray(getarg(1), .@j++), .@weapons[.@i + 1];
		//.@j++;
	}
	//announce(">> " + .@j, bc_self);
	return .@j / $@weaponsForgeColumns;
}

1@mir,97,83,4	script	Instrutor de Forja#sfa	4_M_FAIRYANG,{
	.@npcName$ = "[ Instrutor de Forja ]";
	if(qdo_smith_2 == 2){
		mes .@npcName$;
		mes "Hmmm...";
		mes "Então temos um novato!?";
		mes "Aposto que pretende se tornar um grande Ferreiro também...";
		next;
		mes .@npcName$;
		mes "Nesse caso, não temos tempo a perder!";
		mes "Vá até a ^0075E9Esfera de Plasma^000000 e analise-a.";
		close2;
		qdo_smith_2 = 3;
		changequest(61604, 61605);
	}else if(qdo_smith_2 == 4){
		mes .@npcName$;
		mes "Agora está na hora de eu lhe ensinar os Princípios da Forja das Fadas.";
		next;
		mes .@npcName$;
		mes "Preste bem atenção, porque não vou perder meu tempo explicando novamente.";
		next;
		mes .@npcName$;
		mes "Daqui em diante, se você fizer besteira, terá que assumir a culpa.";
		mes "Vamos lá...";
		next;
		mes .@npcName$;
		mes "A primeira coisa que tem que entender desse processo é que você terá que usar as armas que você mesmo forjou para poder criar uma liga metálica mais forte.";
		next;
		mes .@npcName$;
		mes "Para cada tentativa você terá que usar 2 armas de nível 3 forjadas por você como material.";
		next;
		mes .@npcName$;
		mes "Além disso é necessário " + $@reagentItemQuant + "x ^0075E9" + getitemname($@reagentItem) + "^000000 para liquefazer as armas e transformá-las na liga metálica necessária.";
		next;
		mes .@npcName$;
		mes "E é óbvio que irá precisar de 1x ^0075E9" + getitemname(Anvil) + "^000000(+1%), ^0075E9" + getitemname(Oridecon_Anvil) + "^000000(+3%), ^0075E9" + getitemname(Golden_Anvil) + "^000000(+5%) ou ^0075E9" + getitemname(Emperium_Anvil) + "^000000(+10%) que não será consumida.";
		next;
		mes .@npcName$;
		mes "Por último, você não poderá forjar armas que tenham requerimento de nível mais alto que o seu, óbvio novamente...";
		next;
		mes .@npcName$;
		//mes "Caso o processo falhe, você receberá uma quantidade do material residual ^0075E9" + getitemname($@residualItem) + "^000000 resultante do processo.";
		mes "Caso o processo falhe, você receberá uma quantidade do material residual resultante do processo com base nos materiais que usou para criá-las.";
		next;
		mes .@npcName$;
		mes "Quanto mais ^0075E9" + getitemname(1000) + "^000000 houverem sido usados na forja das armas de nível 3 usadas como material, maior é a chance do processo ser bem sucessido.";
		next;
		mes .@npcName$;
		mes "Para cada 1x ^0075E9" + getitemname(1000) + "^000000, nas armas usadas como material, você receberá ^0075E92%^000000 de chance a mais de sucesso.";
		next;
		mes .@npcName$;
		mes "Então...";
		mes "Entendeu tudo?";
		next;
		if(select("Pode repetir?:Muito simples!") == 1){
			mes .@npcName$;
			mes "Acho que você precisa de uma minuto...";
			mes "Ou tomar um pouco de água...";
			close;
		}
		mes .@npcName$;
		mes "Muito bem...";
		mes "Agora vá na Forja e tente produzir algo.";
		next;
		mes .@npcName$;
		mes "Quando conseguir volte aqui e me mostre.";
		close2;
		qdo_smith_2 = 5;
		changequest(61606, 61607);
	}else if(qdo_smith_2 == 5){
		.@count = callfunc("QDO_F_Get_Required_items", .@items$, 0, 4);
		if(.@count == 0){
			mes .@npcName$;
			mes "E então?";
			mes "Pensei que queria se tornar um Ferreiro melhor...";
			next;
			mes .@npcName$;
			mes "Volte lá e tente até pegar o jeito!";
			close;
		}
		mes .@npcName$;
		mes "Muito bem!";
		mes "Até que você tem talento.";
		mes "Com mais prática você pode até ser o Ferreiro mais famoso deste mundo.";
		close2;
		qdo_smith_2 = 6;
		completequest(61607);
	}else{
		mes .@npcName$;
		mes "Não fique parado aí...";
		mes "...tempo é dinheiro!";
		close2;
	}
	end;
}
